[{"id":"timer",
  "objectId":"https://rulepedia.stanford.edu/oid/predefined/channel/timer",
  "description":"Timer",
  "methods":[],
  "event-sources": [],
  "services": [],
  "events": [{
      "id":"elapsed",
      "description":"Periodically",
      "text": "Every",
      "params": [{
          "id": "interval",
          "type": "time",
          "description": "Every",
          "text":""
      }],
      "event-sources": [{
      "id": "poll",
      "type": "polling",
      "polling-interval": "{{interval}}"
      }],
      "generates":[{
          "id": "current-time",
          "type": "text",
          "description": "the current time",
          "text": "the current time"
      }],
      "script": "function(params, events, context) { log('Periodic timer activated'); context['current-time'] = (new Date()).toLocaleString(); return events.poll; }"
  }]
 },{
  "id":"google-fit",
  "objectId":"https://rulepedia.stanford.edu/oid/predefined/channel/google-fit",
  "description":"Fitness",
  "events":[{
        "id": "end-activity",
        "description": "When I finish an activity",
        "text": "I finish a fitness activity",
        "generates": [{
            "id": "activity-description",
            "type": "text",
            "description": "the description of the activity",
            "text": "the description of the activity"
        },{"id": "activity-duration",
           "type": "time",
           "description": "the duration of the activity",
           "text": "the duration of the activity"
        },{"id": "activity-end-time",
           "type": "text",
           "description": "the end time of the activity",
           "text": "the end time of the activity"}],
        "params": []
      }],
  "methods":[{
      "id": "fetch-history-data",
      "description": "Compute my statistics",
      "text": "Compute the aggregate statistics of",
      "generates": [{
         "id": "fitness-statistics-{{data-type}}",
         "type": "number",
         "description": "the computed {{data-type}}",
         "text": "the computed {{data-type}}"
      }],
      "params": [{
         "id": "data-type",
         "type": "select",
         "canTrigger": false,
         "options": {"calories-expended": "Calories consumed",
                     "distance-delta": "Distance travelled",
                     "avg-heart-rate": "Average heart rate",
                     "max-heart-rate": "Maximum heart rate",
                     "avg-power": "Average power output",
                     "max-power": "Maximum power output",
                     "avg-speed": "Average speed",
                     "max-speed": "Maximum speed",
                     "step-count": "Number of steps"},
         "description": "aggregating this data",
         "text":""
      },{
        "id": "aggregate-period",
        "type": "time",
        "description": "over this period",
        "text": "over the last"
      },{
        "id": "activity-filter",
        "type": "text",
        "optional": true,
        "description": "for a specific activity",
        "text": "when I was doing"
      }]
  },{
      "id": "fetch-current-value",
      "description": "Compute my current values",
      "text": "Read my biometric value of",
      "generates": [{
         "id": "fitness-current-value-{{data-type}}",
         "type": "number",
         "description": "the current biometric value",
         "text": "the current value"
      }],
      "params": [{
         "id": "data-type",
         "type": "select",
         "canTrigger": false,
         "options": {"weight": "Weight",
                     "height": "Height",
                     "basal-metabolic-rate": "Basal metabolic rate",
                     "body-fat-percentage": "Body fat percentage"},
         "description": "measuring this data",
         "text":""
      }]
  }]
 },{"id":"notifications",
    "objectId":"https://rulepedia.stanford.edu/oid/predefined/channel/notifications",
    "description":"Notifications",
    "events":[],
    "methods": [{
        "id":"post-notification",
        "description": "Show a notification",
        "text": "Show a notification",
        "generates": [],
        "params": [{
            "id": "title",
            "type": "text",
            "description": "with the title",
            "text": "with title"
        },{
            "id": "text",
            "type": "textarea",
            "description": "with the text",
            "text": "and saying"
        }]
    }]
 }, {
       "id": "weather",
       "objectId":"https://rulepedia.stanford.edu/oid/predefined/channel/weather",
       "description": "Weather",
       "methods": [],
       "events": [{
           "id": "given-forecast",
           "description": "When the forecast says",
           "text": "the weather forecast says",
           "params": [{
               "id": "forecast",
               "type": "select",
               "options": { "rain": "Rain", "sun": "Sunny" },
               "defaultOption": "rain"
           }],
           "generates": []
       },{
           "id": "given-temperature",
           "description": "When the temperature is",
           "text": "the weather forecast says the temperature is",
           "params": [{
               "id": "comparator",
               "type": "select",
               "options": { "gt": "above", "lt": "below"},
               "defaultOption":"gt"
           },{
               "id": "value",
               "type": "temperature"
           }],
           "generates": []
       }]
   },{
        "id": "deal-test",
        "objectId": "https://deal-me.herokuapp.com/nba",
        "urlPrefix": "",
        "urlRegex": "",
        "description": "Deal Test",
        "services": [],
        "event-sources": [
          {
            "id": "deal-poll",
            "type": "polling-http",
            "polling-interval": 30000,
            "url": "{{url}}"
          }
        ],
        "events": [
          {
            "id": "game",
            "description": "The NBA Champion will be the",
            "text": "",
            "script": "function trigger(params, events, context) {var obj = JSON.parse(events.deal-poll); context['player_won'] = obj.winning_team == \"warriors\"; context['winning_team'] = obj.winning_team; context['player_team'] = \"warriors\"; return obj.game_over}",
            "generates": [
              {
                "id": "player_won",
                "type": "number",
                "text": "win",
                "description": "win"
              },
              {
                "id": "winning_team",
                "type": "text",
                "text": "win_team",
                "description": "win_team"
              }
            ],
            "params": [
              {
                "id": "teams",
                "type": "select",
                "description": "",
                "text": "The NBA Champions will be the ",
                "options": { "Warriors": "Warriors", "Cavs": "Cavs"},
                "defaultOption": "Warriors"
              }
            ]
          }
        ],
        "methods": [

        ]
      }, {
      "id":"ping",
      "objectId":"http://deal-me.herokuapp.com/ping",
      "urlPrefix":"",
      "urlRegex":"",
      "description":"Deal Ping",
      "services": [],
      "event-sources":[

      ],
      "events":[

      ],
      "methods":[
          {
              "id":"ping-action",
              "description":"Ping this URL",
              "text":"Will ping this URL",
              "generates": [],
              "params":[
                  {
                      "id":"url",
                      "type":"text",
                      "text":"url",
                      "description":"URL",
                      "optional":false
                  },
                  {
                      "id":"data",
                      "type":"text",
                      "text":"data",
                      "description":"Data",
                      "optional":false
                  }
              ],
              "script":"function action(params) {\n return {type: 'http', url: params.url, method: 'get', data: params.data};\n}"
          }
      ]
      }]
